{"remainingRequest":"D:\\Java_project\\前后端分离电商系统x-mall源码+sql\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\Java_project\\前后端分离电商系统x-mall源码+sql\\front\\src\\utils\\request.js","dependencies":[{"path":"D:\\Java_project\\前后端分离电商系统x-mall源码+sql\\front\\src\\utils\\request.js","mtime":1621952491040},{"path":"D:\\Java_project\\前后端分离电商系统x-mall源码+sql\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683275907305},{"path":"D:\\Java_project\\前后端分离电商系统x-mall源码+sql\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1683275907659}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOyAvLyDlrprkuYnlkI7lj7Dorr/pl67ot6/lvoQKCnZhciBCQVNFX1VSTCA9ICJodHRwOi8vbG9jYWxob3N0Ojk5OTkvIjsgLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCgp2YXIgQVBJID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiBCQVNFX1VSTCwKICAvLyB1cmwgPSBiYXNlIHVybAogIHRpbWVvdXQ6IDYwMDAwIC8vIHJlcXVlc3QgdGltZW91dAoKfSk7IC8vIHJlcXVlc3Qg5oum5oiq5ZmoCi8vIOWPr+S7peiHquivt+axguWPkemAgeWJjeWvueivt+axguWBmuS4gOS6m+WkhOeQhgovLyDmr5TlpoLnu5/kuIDliqB0b2tlbu+8jOWvueivt+axguWPguaVsOe7n+S4gOWKoOWvhgoKQVBJLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCc7CiAgdmFyIHVzZXIgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikgfHwgJ3t9JzsKICB1c2VyID0gSlNPTi5wYXJzZSh1c2VyKTsKICBjb25maWcuaGVhZGVyc1sndG9rZW4nXSA9IHVzZXIudG9rZW47CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIHJlc3BvbnNlIOaLpuaIquWZqAovLyDlj6/ku6XlnKjmjqXlj6Plk43lupTlkI7nu5/kuIDlpITnkIbnu5PmnpwKCkFQSS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOyAvLyDlpoLmnpzmmK/ov5Tlm57nmoTmlofku7YKCiAgaWYgKHJlc3BvbnNlLmNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICdibG9iJykgewogICAgcmV0dXJuIHJlczsKICB9IC8vIOWFvOWuueacjeWKoeerr+i/lOWbnueahOWtl+espuS4suaVsOaNrgoKCiAgaWYgKHR5cGVvZiByZXMgPT09ICdzdHJpbmcnKSB7CiAgICByZXMgPSByZXMgPyBKU09OLnBhcnNlKHJlcykgOiByZXM7CiAgfQoKICBpZiAocmVzLmNvZGUgPT09ICc0MDEnKSB7CiAgICAvLyDmuIXpmaTnvJPlrZgKICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oInVzZXIiKTsKICAgIHJvdXRlci5wdXNoKHsKICAgICAgcGF0aDogJy9sb2dpbicKICAgIH0pOwogICAgcmV0dXJuIHJlczsKICB9CgogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IEFQSTs="},{"version":3,"sources":["D:/Java_project/前后端分离电商系统x-mall源码+sql/front/src/utils/request.js"],"names":["axios","router","Vue","BASE_URL","API","create","baseURL","timeout","interceptors","request","use","config","headers","user","sessionStorage","getItem","JSON","parse","token","error","Promise","reject","response","res","data","responseType","code","removeItem","push","path","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,wBAAjB,C,CAEA;;AACA,IAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEH,QADY;AACF;AACnBI,EAAAA,OAAO,EAAE,KAFY,CAEN;;AAFM,CAAb,CAAZ,C,CAKA;AACA;AACA;;AACAH,GAAG,CAACI,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAAAC,MAAM,EAAI;AACnCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;AACA,MAAIC,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,KAAkC,IAA7C;AACAF,EAAAA,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACAF,EAAAA,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BC,IAAI,CAACK,KAA/B;AACA,SAAOP,MAAP;AACH,CAND,EAMG,UAAAQ,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARD,E,CAUA;AACA;;AACAf,GAAG,CAACI,YAAJ,CAAiBc,QAAjB,CAA0BZ,GAA1B,CACI,UAAAY,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACX,MAAT,CAAgBc,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWM,GAAX,CAAH,GAAqBA,GAA9B;AACH;;AACD,MAAIA,GAAG,CAACG,IAAJ,KAAa,KAAjB,EAAwB;AACpB;AACAZ,IAAAA,cAAc,CAACa,UAAf,CAA0B,MAA1B;AACA1B,IAAAA,MAAM,CAAC2B,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AACA,WAAON,GAAP;AACH;;AACD,SAAOA,GAAP;AACH,CAlBL,EAmBI,UAAAJ,KAAK,EAAI;AACLW,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQZ,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAtBL;AA0BA,eAAef,GAAf","sourcesContent":["import axios from 'axios'\r\nimport router from '../router'\r\nimport Vue from 'vue'\r\n\r\n// 定义后台访问路径\r\nconst BASE_URL = \"http://localhost:9999/\"\r\n\r\n// create an axios instance\r\nconst API = axios.create({\r\n    baseURL: BASE_URL, // url = base url\r\n    timeout: 60000 // request timeout\r\n});\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nAPI.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n    let user = sessionStorage.getItem(\"user\") || '{}';\r\n    user = JSON.parse(user);\r\n    config.headers['token'] = user.token;\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nAPI.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 如果是返回的文件\r\n        if (response.config.responseType === 'blob') {\r\n            return res\r\n        }\r\n        // 兼容服务端返回的字符串数据\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        if (res.code === '401') {\r\n            // 清除缓存\r\n            sessionStorage.removeItem(\"user\");\r\n            router.push({path: '/login'});\r\n            return res;\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.log('err' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nexport default API\r\n"]}]}